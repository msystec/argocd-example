suite: Jenkins Controller
release:
  name: my-release
  namespace: my-namespace
templates:
  - jenkins-master-deployment.yaml
tests:
  - it: default values
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: apiVersion
          value: apps/v1
      - equal:
          path: metadata.name
          value: my-release-jenkins
      - equal:
          path: metadata.namespace
          value: my-namespace
      - matchRegex:
          path: metadata.labels.helm\.sh/chart
          pattern: ^jenkins-
      - isNull:
          path: metadata.annotations
      - equal:
          path: spec.replicas
          value: 1
      - equal:
          path: spec.selector
          value:
            matchLabels:
              app.kubernetes.io/component: jenkins-master
              app.kubernetes.io/instance: my-release
      - equal:
          path: spec
          value:
            replicas: 1
            selector:
              matchLabels:
                app.kubernetes.io/component: jenkins-master
                app.kubernetes.io/instance: my-release
            strategy:
              type: Recreate
            template:
              metadata:
                annotations:
                  checksum/config: 3ba23f433d321215bc22cf8295c0a264594bc1675408af2f710e36b86c1c1f38
                labels:
                  app.kubernetes.io/component: jenkins-master
                  app.kubernetes.io/instance: my-release
                  app.kubernetes.io/managed-by: Tiller
                  app.kubernetes.io/name: jenkins
              spec:
                containers:
                - args:
                  - --argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)
                  - --argumentsRealm.roles.$(ADMIN_USER)=admin
                  - --httpPort=8080
                  env:
                  - name: POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: JAVA_OPTS
                    value: -Dcasc.reload.token=$(POD_NAME)
                  - name: JENKINS_OPTS
                    value: ""
                  - name: JENKINS_SLAVE_AGENT_PORT
                    value: "50000"
                  - name: ADMIN_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        key: jenkins-admin-password
                        name: my-release-jenkins
                  - name: ADMIN_USER
                    valueFrom:
                      secretKeyRef:
                        key: jenkins-admin-user
                        name: my-release-jenkins
                  - name: CASC_JENKINS_CONFIG
                    value: /var/jenkins_home/casc_configs
                  image: jenkins/jenkins:lts
                  imagePullPolicy: Always
                  livenessProbe:
                    failureThreshold: 5
                    httpGet:
                      path: /login
                      port: http
                    initialDelaySeconds: 90
                    periodSeconds: 10
                    timeoutSeconds: 5
                  name: jenkins
                  ports:
                  - containerPort: 8080
                    name: http
                  - containerPort: 50000
                    name: slavelistener
                  readinessProbe:
                    failureThreshold: 3
                    httpGet:
                      path: /login
                      port: http
                    initialDelaySeconds: 60
                    periodSeconds: 10
                    timeoutSeconds: 5
                  resources:
                    limits:
                      cpu: 2000m
                      memory: 4096Mi
                    requests:
                      cpu: 50m
                      memory: 256Mi
                  volumeMounts:
                  - mountPath: /tmp
                    name: tmp
                  - mountPath: /var/jenkins_home
                    name: jenkins-home
                    readOnly: false
                  - mountPath: /var/jenkins_config
                    name: jenkins-config
                    readOnly: true
                  - mountPath: /usr/share/jenkins/ref/plugins/
                    name: plugin-dir
                    readOnly: false
                  - mountPath: /var/jenkins_home/casc_configs
                    name: sc-config-volume
                - env:
                  - name: POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: LABEL
                    value: my-release-jenkins-jenkins-config
                  - name: FOLDER
                    value: /var/jenkins_home/casc_configs
                  - name: NAMESPACE
                    value: my-namespace
                  - name: REQ_URL
                    value: http://localhost:8080/reload-configuration-as-code/?casc-reload-token=$(POD_NAME)
                  - name: REQ_METHOD
                    value: POST
                  - name: REQ_RETRY_CONNECT
                    value: "10"
                  image: kiwigrid/k8s-sidecar:0.1.193
                  imagePullPolicy: IfNotPresent
                  name: jenkins-sc-config
                  resources: {}
                  volumeMounts:
                  - mountPath: /var/jenkins_home/casc_configs
                    name: sc-config-volume
                  - mountPath: /var/jenkins_home
                    name: jenkins-home
                initContainers:
                - command:
                  - sh
                  - /var/jenkins_config/apply_config.sh
                  env:
                  - name: ADMIN_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        key: jenkins-admin-password
                        name: my-release-jenkins
                  - name: ADMIN_USER
                    valueFrom:
                      secretKeyRef:
                        key: jenkins-admin-user
                        name: my-release-jenkins
                  image: jenkins/jenkins:lts
                  imagePullPolicy: Always
                  name: copy-default-config
                  resources:
                    limits:
                      cpu: 2000m
                      memory: 4096Mi
                    requests:
                      cpu: 50m
                      memory: 256Mi
                  volumeMounts:
                  - mountPath: /tmp
                    name: tmp
                  - mountPath: /var/jenkins_home
                    name: jenkins-home
                  - mountPath: /var/jenkins_config
                    name: jenkins-config
                  - mountPath: /usr/share/jenkins/ref/plugins
                    name: plugins
                  - mountPath: /var/jenkins_plugins
                    name: plugin-dir
                securityContext:
                  fsGroup: 1000
                  runAsUser: 1000
                serviceAccountName: my-release-jenkins
                volumes:
                - emptyDir: {}
                  name: plugins
                - emptyDir: {}
                  name: tmp
                - configMap:
                    name: my-release-jenkins
                  name: jenkins-config
                - emptyDir: {}
                  name: plugin-dir
                - name: jenkins-home
                  persistentVolumeClaim:
                    claimName: my-release-jenkins
                - emptyDir: {}
                  name: sc-config-volume
  - it: test different values
    set:
      master:
        deploymentAnnotations:
          my-annotation: value
        schedulerName: my-scheduler
        nodeSelector:
          nodeLabel: value
        tolerations:
        - key: "key"
          operator: "Equal"
          value: "value"
          effect: "NoSchedule"
        affinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: security
                  operator: In
                  values:
                  - S1
              topologyKey: failure-domain.beta.kubernetes.io/zone
        terminationGracePeriodSeconds: 120
        priorityClassName: important
        runAsUser: 2000
        fsGroup: 4000
        securityContextCapabilities:
          drop:
            - NET_RAW
        hostNetworking: true
        hostAliases:
          - ip: 192.168.50.50
            hostnames:
              - something.local
      serviceAccount.name: my-serviceaccount
    asserts:
    - equal:
        path: metadata.annotations
        value:
          my-annotation: value
    - equal:
        path: spec.template.spec.schedulerName
        value: my-scheduler
    - equal:
        path: spec.template.spec.nodeSelector
        value:
          nodeLabel: value
    - equal:
        path: spec.template.spec.tolerations
        value:
          - key: "key"
            operator: "Equal"
            value: "value"
            effect: "NoSchedule"
    - equal:
        path: spec.template.spec.affinity
        value:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: security
                operator: In
                values:
                - S1
            topologyKey: failure-domain.beta.kubernetes.io/zone
    - equal:
        path: spec.template.spec.terminationGracePeriodSeconds
        value: 120
    - equal:
        path: spec.template.spec.priorityClassName
        value: important
    - equal:
        path: spec.template.spec.securityContext
        value:
          runAsUser: 2000
          fsGroup: 4000
          capabilities:
            drop:
              - NET_RAW
    - equal:
        path: spec.template.spec.serviceAccountName
        value: my-serviceaccount
    - equal:
        path: spec.template.spec.hostNetwork
        value: true
    - equal:
        path: spec.template.spec.dnsPolicy
        value: ClusterFirstWithHostNet
    - equal:
        path: spec.template.spec.hostAliases
        value:
          - ip: 192.168.50.50
            hostnames:
              - something.local
  - it: configure image tag
    set:
      master.tag: 2.249.1-slim
      master.imagePullPolicy: IfNotPresent
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: jenkins/jenkins:2.249.1-slim
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: IfNotPresent
  - it: custom image
    set:
      master:
        image: registry/image
        tag: my-tag
        javaOpts: -Dio.jenkins.plugins.kubernetes.disableNoDelayProvisioning=true
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: registry/image:my-tag
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: JAVA_OPTS
            value: "-Dcasc.reload.token=$(POD_NAME) -Dio.jenkins.plugins.kubernetes.disableNoDelayProvisioning=true"
  - it: disable helm.sh label
    set:
      renderHelmLabels: false
    asserts:
      - equal:
          path: metadata.labels
          value:
            app.kubernetes.io/component: jenkins-master
            app.kubernetes.io/instance: my-release
            app.kubernetes.io/managed-by: Tiller
            app.kubernetes.io/name: jenkins
